/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.eclipse.bpel.model.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.bpel.model.util.BPELAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class BPELItemProviderAdapterFactory extends BPELAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public BPELItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Process} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessItemProvider processItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Process}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessAdapter() {
		if (processItemProvider == null) {
			processItemProvider = new ProcessItemProvider(this);
		}

		return processItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.PartnerLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartnerLinkItemProvider partnerLinkItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.PartnerLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartnerLinkAdapter() {
		if (partnerLinkItemProvider == null) {
			partnerLinkItemProvider = new PartnerLinkItemProvider(this);
		}

		return partnerLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.FaultHandler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FaultHandlerItemProvider faultHandlerItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.FaultHandler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFaultHandlerAdapter() {
		if (faultHandlerItemProvider == null) {
			faultHandlerItemProvider = new FaultHandlerItemProvider(this);
		}

		return faultHandlerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Activity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityItemProvider activityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Activity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActivityAdapter() {
		if (activityItemProvider == null) {
			activityItemProvider = new ActivityItemProvider(this);
		}

		return activityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.CorrelationSet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CorrelationSetItemProvider correlationSetItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.CorrelationSet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCorrelationSetAdapter() {
		if (correlationSetItemProvider == null) {
			correlationSetItemProvider = new CorrelationSetItemProvider(this);
		}

		return correlationSetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Invoke} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InvokeItemProvider invokeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Invoke}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInvokeAdapter() {
		if (invokeItemProvider == null) {
			invokeItemProvider = new InvokeItemProvider(this);
		}

		return invokeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Link} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkItemProvider linkItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Link}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinkAdapter() {
		if (linkItemProvider == null) {
			linkItemProvider = new LinkItemProvider(this);
		}

		return linkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Catch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CatchItemProvider catchItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Catch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCatchAdapter() {
		if (catchItemProvider == null) {
			catchItemProvider = new CatchItemProvider(this);
		}

		return catchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Reply} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplyItemProvider replyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Reply}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReplyAdapter() {
		if (replyItemProvider == null) {
			replyItemProvider = new ReplyItemProvider(this);
		}

		return replyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.PartnerActivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartnerActivityItemProvider partnerActivityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.PartnerActivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartnerActivityAdapter() {
		if (partnerActivityItemProvider == null) {
			partnerActivityItemProvider = new PartnerActivityItemProvider(this);
		}

		return partnerActivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Receive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReceiveItemProvider receiveItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Receive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReceiveAdapter() {
		if (receiveItemProvider == null) {
			receiveItemProvider = new ReceiveItemProvider(this);
		}

		return receiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Exit} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExitItemProvider exitItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Exit}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExitAdapter() {
		if (exitItemProvider == null) {
			exitItemProvider = new ExitItemProvider(this);
		}

		return exitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Throw} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThrowItemProvider throwItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Throw}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThrowAdapter() {
		if (throwItemProvider == null) {
			throwItemProvider = new ThrowItemProvider(this);
		}

		return throwItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Wait} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WaitItemProvider waitItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Wait}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWaitAdapter() {
		if (waitItemProvider == null) {
			waitItemProvider = new WaitItemProvider(this);
		}

		return waitItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Empty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EmptyItemProvider emptyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Empty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEmptyAdapter() {
		if (emptyItemProvider == null) {
			emptyItemProvider = new EmptyItemProvider(this);
		}

		return emptyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Sequence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceItemProvider sequenceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Sequence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceAdapter() {
		if (sequenceItemProvider == null) {
			sequenceItemProvider = new SequenceItemProvider(this);
		}

		return sequenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.While} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WhileItemProvider whileItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.While}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWhileAdapter() {
		if (whileItemProvider == null) {
			whileItemProvider = new WhileItemProvider(this);
		}

		return whileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Pick} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PickItemProvider pickItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Pick}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPickAdapter() {
		if (pickItemProvider == null) {
			pickItemProvider = new PickItemProvider(this);
		}

		return pickItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Flow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlowItemProvider flowItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Flow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlowAdapter() {
		if (flowItemProvider == null) {
			flowItemProvider = new FlowItemProvider(this);
		}

		return flowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.OnAlarm} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnAlarmItemProvider onAlarmItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.OnAlarm}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOnAlarmAdapter() {
		if (onAlarmItemProvider == null) {
			onAlarmItemProvider = new OnAlarmItemProvider(this);
		}

		return onAlarmItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Assign} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssignItemProvider assignItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Assign}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssignAdapter() {
		if (assignItemProvider == null) {
			assignItemProvider = new AssignItemProvider(this);
		}

		return assignItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Copy} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CopyItemProvider copyItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Copy}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCopyAdapter() {
		if (copyItemProvider == null) {
			copyItemProvider = new CopyItemProvider(this);
		}

		return copyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Extension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionItemProvider extensionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Extension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionAdapter() {
		if (extensionItemProvider == null) {
			extensionItemProvider = new ExtensionItemProvider(this);
		}

		return extensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Scope} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScopeItemProvider scopeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Scope}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScopeAdapter() {
		if (scopeItemProvider == null) {
			scopeItemProvider = new ScopeItemProvider(this);
		}

		return scopeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.CompensateScope} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompensateScopeItemProvider compensateScopeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.CompensateScope}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompensateScopeAdapter() {
		if (compensateScopeItemProvider == null) {
			compensateScopeItemProvider = new CompensateScopeItemProvider(this);
		}

		return compensateScopeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.CompensationHandler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompensationHandlerItemProvider compensationHandlerItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.CompensationHandler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompensationHandlerAdapter() {
		if (compensationHandlerItemProvider == null) {
			compensationHandlerItemProvider = new CompensationHandlerItemProvider(
					this);
		}

		return compensationHandlerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.To} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ToItemProvider toItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.To}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createToAdapter() {
		if (toItemProvider == null) {
			toItemProvider = new ToItemProvider(this);
		}

		return toItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.From} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FromItemProvider fromItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.From}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFromAdapter() {
		if (fromItemProvider == null) {
			fromItemProvider = new FromItemProvider(this);
		}

		return fromItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.OnMessage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnMessageItemProvider onMessageItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.OnMessage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOnMessageAdapter() {
		if (onMessageItemProvider == null) {
			onMessageItemProvider = new OnMessageItemProvider(this);
		}

		return onMessageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Expression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionItemProvider expressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Expression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionAdapter() {
		if (expressionItemProvider == null) {
			expressionItemProvider = new ExpressionItemProvider(this);
		}

		return expressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.BooleanExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanExpressionItemProvider booleanExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.BooleanExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanExpressionAdapter() {
		if (booleanExpressionItemProvider == null) {
			booleanExpressionItemProvider = new BooleanExpressionItemProvider(
					this);
		}

		return booleanExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Correlation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CorrelationItemProvider correlationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Correlation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCorrelationAdapter() {
		if (correlationItemProvider == null) {
			correlationItemProvider = new CorrelationItemProvider(this);
		}

		return correlationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.MessageExchange} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageExchangeItemProvider messageExchangeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.MessageExchange}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageExchangeAdapter() {
		if (messageExchangeItemProvider == null) {
			messageExchangeItemProvider = new MessageExchangeItemProvider(this);
		}

		return messageExchangeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.EventHandler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventHandlerItemProvider eventHandlerItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.EventHandler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventHandlerAdapter() {
		if (eventHandlerItemProvider == null) {
			eventHandlerItemProvider = new EventHandlerItemProvider(this);
		}

		return eventHandlerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Source} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceItemProvider sourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Source}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceAdapter() {
		if (sourceItemProvider == null) {
			sourceItemProvider = new SourceItemProvider(this);
		}

		return sourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Target} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetItemProvider targetItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Target}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetAdapter() {
		if (targetItemProvider == null) {
			targetItemProvider = new TargetItemProvider(this);
		}

		return targetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.PartnerLinks} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartnerLinksItemProvider partnerLinksItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.PartnerLinks}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartnerLinksAdapter() {
		if (partnerLinksItemProvider == null) {
			partnerLinksItemProvider = new PartnerLinksItemProvider(this);
		}

		return partnerLinksItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.MessageExchanges} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageExchangesItemProvider messageExchangesItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.MessageExchanges}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageExchangesAdapter() {
		if (messageExchangesItemProvider == null) {
			messageExchangesItemProvider = new MessageExchangesItemProvider(
					this);
		}

		return messageExchangesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Variables} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariablesItemProvider variablesItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Variables}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariablesAdapter() {
		if (variablesItemProvider == null) {
			variablesItemProvider = new VariablesItemProvider(this);
		}

		return variablesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.CorrelationSets} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CorrelationSetsItemProvider correlationSetsItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.CorrelationSets}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCorrelationSetsAdapter() {
		if (correlationSetsItemProvider == null) {
			correlationSetsItemProvider = new CorrelationSetsItemProvider(this);
		}

		return correlationSetsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Links} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinksItemProvider linksItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Links}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinksAdapter() {
		if (linksItemProvider == null) {
			linksItemProvider = new LinksItemProvider(this);
		}

		return linksItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.CatchAll} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CatchAllItemProvider catchAllItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.CatchAll}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCatchAllAdapter() {
		if (catchAllItemProvider == null) {
			catchAllItemProvider = new CatchAllItemProvider(this);
		}

		return catchAllItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Correlations} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CorrelationsItemProvider correlationsItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Correlations}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCorrelationsAdapter() {
		if (correlationsItemProvider == null) {
			correlationsItemProvider = new CorrelationsItemProvider(this);
		}

		return correlationsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Variable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableItemProvider variableItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Variable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableAdapter() {
		if (variableItemProvider == null) {
			variableItemProvider = new VariableItemProvider(this);
		}

		return variableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.UnknownExtensibilityAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnknownExtensibilityAttributeItemProvider unknownExtensibilityAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.UnknownExtensibilityAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnknownExtensibilityAttributeAdapter() {
		if (unknownExtensibilityAttributeItemProvider == null) {
			unknownExtensibilityAttributeItemProvider = new UnknownExtensibilityAttributeItemProvider(
					this);
		}

		return unknownExtensibilityAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.OnEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnEventItemProvider onEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.OnEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOnEventAdapter() {
		if (onEventItemProvider == null) {
			onEventItemProvider = new OnEventItemProvider(this);
		}

		return onEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Import} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportItemProvider importItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Import}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportAdapter() {
		if (importItemProvider == null) {
			importItemProvider = new ImportItemProvider(this);
		}

		return importItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Rethrow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RethrowItemProvider rethrowItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Rethrow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRethrowAdapter() {
		if (rethrowItemProvider == null) {
			rethrowItemProvider = new RethrowItemProvider(this);
		}

		return rethrowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Condition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionItemProvider conditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Condition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionAdapter() {
		if (conditionItemProvider == null) {
			conditionItemProvider = new ConditionItemProvider(this);
		}

		return conditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Targets} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TargetsItemProvider targetsItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Targets}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTargetsAdapter() {
		if (targetsItemProvider == null) {
			targetsItemProvider = new TargetsItemProvider(this);
		}

		return targetsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Sources} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourcesItemProvider sourcesItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Sources}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourcesAdapter() {
		if (sourcesItemProvider == null) {
			sourcesItemProvider = new SourcesItemProvider(this);
		}

		return sourcesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Query} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryItemProvider queryItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Query}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryAdapter() {
		if (queryItemProvider == null) {
			queryItemProvider = new QueryItemProvider(this);
		}

		return queryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.ServiceRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceRefItemProvider serviceRefItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.ServiceRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceRefAdapter() {
		if (serviceRefItemProvider == null) {
			serviceRefItemProvider = new ServiceRefItemProvider(this);
		}

		return serviceRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Extensions} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionsItemProvider extensionsItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Extensions}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionsAdapter() {
		if (extensionsItemProvider == null) {
			extensionsItemProvider = new ExtensionsItemProvider(this);
		}

		return extensionsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.ExtensionActivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionActivityItemProvider extensionActivityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.ExtensionActivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionActivityAdapter() {
		if (extensionActivityItemProvider == null) {
			extensionActivityItemProvider = new ExtensionActivityItemProvider(
					this);
		}

		return extensionActivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.FromPart} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FromPartItemProvider fromPartItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.FromPart}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFromPartAdapter() {
		if (fromPartItemProvider == null) {
			fromPartItemProvider = new FromPartItemProvider(this);
		}

		return fromPartItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.ToPart} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ToPartItemProvider toPartItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.ToPart}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createToPartAdapter() {
		if (toPartItemProvider == null) {
			toPartItemProvider = new ToPartItemProvider(this);
		}

		return toPartItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.OpaqueActivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpaqueActivityItemProvider opaqueActivityItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.OpaqueActivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpaqueActivityAdapter() {
		if (opaqueActivityItemProvider == null) {
			opaqueActivityItemProvider = new OpaqueActivityItemProvider(this);
		}

		return opaqueActivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.ForEach} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForEachItemProvider forEachItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.ForEach}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForEachAdapter() {
		if (forEachItemProvider == null) {
			forEachItemProvider = new ForEachItemProvider(this);
		}

		return forEachItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.RepeatUntil} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepeatUntilItemProvider repeatUntilItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.RepeatUntil}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepeatUntilAdapter() {
		if (repeatUntilItemProvider == null) {
			repeatUntilItemProvider = new RepeatUntilItemProvider(this);
		}

		return repeatUntilItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.TerminationHandler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TerminationHandlerItemProvider terminationHandlerItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.TerminationHandler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTerminationHandlerAdapter() {
		if (terminationHandlerItemProvider == null) {
			terminationHandlerItemProvider = new TerminationHandlerItemProvider(
					this);
		}

		return terminationHandlerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Validate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValidateItemProvider validateItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Validate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValidateAdapter() {
		if (validateItemProvider == null) {
			validateItemProvider = new ValidateItemProvider(this);
		}

		return validateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.If} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfItemProvider ifItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.If}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfAdapter() {
		if (ifItemProvider == null) {
			ifItemProvider = new IfItemProvider(this);
		}

		return ifItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.ElseIf} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElseIfItemProvider elseIfItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.ElseIf}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElseIfAdapter() {
		if (elseIfItemProvider == null) {
			elseIfItemProvider = new ElseIfItemProvider(this);
		}

		return elseIfItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Else} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElseItemProvider elseItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Else}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElseAdapter() {
		if (elseItemProvider == null) {
			elseItemProvider = new ElseItemProvider(this);
		}

		return elseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.CompletionCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompletionConditionItemProvider completionConditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.CompletionCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompletionConditionAdapter() {
		if (completionConditionItemProvider == null) {
			completionConditionItemProvider = new CompletionConditionItemProvider(
					this);
		}

		return completionConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Branches} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BranchesItemProvider branchesItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Branches}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBranchesAdapter() {
		if (branchesItemProvider == null) {
			branchesItemProvider = new BranchesItemProvider(this);
		}

		return branchesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.BPELExtensibleElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BPELExtensibleElementItemProvider bpelExtensibleElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.BPELExtensibleElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBPELExtensibleElementAdapter() {
		if (bpelExtensibleElementItemProvider == null) {
			bpelExtensibleElementItemProvider = new BPELExtensibleElementItemProvider(
					this);
		}

		return bpelExtensibleElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Documentation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentationItemProvider documentationItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Documentation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentationAdapter() {
		if (documentationItemProvider == null) {
			documentationItemProvider = new DocumentationItemProvider(this);
		}

		return documentationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.Compensate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompensateItemProvider compensateItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.Compensate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompensateAdapter() {
		if (compensateItemProvider == null) {
			compensateItemProvider = new CompensateItemProvider(this);
		}

		return compensateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.FromParts} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FromPartsItemProvider fromPartsItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.FromParts}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFromPartsAdapter() {
		if (fromPartsItemProvider == null) {
			fromPartsItemProvider = new FromPartsItemProvider(this);
		}

		return fromPartsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.bpel.model.ToParts} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ToPartsItemProvider toPartsItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.bpel.model.ToParts}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createToPartsAdapter() {
		if (toPartsItemProvider == null) {
			toPartsItemProvider = new ToPartsItemProvider(this);
		}

		return toPartsItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory
				.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(
			ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>)
					|| (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (processItemProvider != null)
			processItemProvider.dispose();
		if (partnerLinkItemProvider != null)
			partnerLinkItemProvider.dispose();
		if (faultHandlerItemProvider != null)
			faultHandlerItemProvider.dispose();
		if (activityItemProvider != null)
			activityItemProvider.dispose();
		if (correlationSetItemProvider != null)
			correlationSetItemProvider.dispose();
		if (invokeItemProvider != null)
			invokeItemProvider.dispose();
		if (linkItemProvider != null)
			linkItemProvider.dispose();
		if (catchItemProvider != null)
			catchItemProvider.dispose();
		if (replyItemProvider != null)
			replyItemProvider.dispose();
		if (partnerActivityItemProvider != null)
			partnerActivityItemProvider.dispose();
		if (receiveItemProvider != null)
			receiveItemProvider.dispose();
		if (exitItemProvider != null)
			exitItemProvider.dispose();
		if (throwItemProvider != null)
			throwItemProvider.dispose();
		if (waitItemProvider != null)
			waitItemProvider.dispose();
		if (emptyItemProvider != null)
			emptyItemProvider.dispose();
		if (sequenceItemProvider != null)
			sequenceItemProvider.dispose();
		if (whileItemProvider != null)
			whileItemProvider.dispose();
		if (pickItemProvider != null)
			pickItemProvider.dispose();
		if (flowItemProvider != null)
			flowItemProvider.dispose();
		if (onAlarmItemProvider != null)
			onAlarmItemProvider.dispose();
		if (assignItemProvider != null)
			assignItemProvider.dispose();
		if (copyItemProvider != null)
			copyItemProvider.dispose();
		if (extensionItemProvider != null)
			extensionItemProvider.dispose();
		if (scopeItemProvider != null)
			scopeItemProvider.dispose();
		if (compensateScopeItemProvider != null)
			compensateScopeItemProvider.dispose();
		if (compensationHandlerItemProvider != null)
			compensationHandlerItemProvider.dispose();
		if (toItemProvider != null)
			toItemProvider.dispose();
		if (fromItemProvider != null)
			fromItemProvider.dispose();
		if (onMessageItemProvider != null)
			onMessageItemProvider.dispose();
		if (expressionItemProvider != null)
			expressionItemProvider.dispose();
		if (booleanExpressionItemProvider != null)
			booleanExpressionItemProvider.dispose();
		if (correlationItemProvider != null)
			correlationItemProvider.dispose();
		if (messageExchangeItemProvider != null)
			messageExchangeItemProvider.dispose();
		if (eventHandlerItemProvider != null)
			eventHandlerItemProvider.dispose();
		if (sourceItemProvider != null)
			sourceItemProvider.dispose();
		if (targetItemProvider != null)
			targetItemProvider.dispose();
		if (partnerLinksItemProvider != null)
			partnerLinksItemProvider.dispose();
		if (messageExchangesItemProvider != null)
			messageExchangesItemProvider.dispose();
		if (variablesItemProvider != null)
			variablesItemProvider.dispose();
		if (correlationSetsItemProvider != null)
			correlationSetsItemProvider.dispose();
		if (linksItemProvider != null)
			linksItemProvider.dispose();
		if (catchAllItemProvider != null)
			catchAllItemProvider.dispose();
		if (correlationsItemProvider != null)
			correlationsItemProvider.dispose();
		if (variableItemProvider != null)
			variableItemProvider.dispose();
		if (unknownExtensibilityAttributeItemProvider != null)
			unknownExtensibilityAttributeItemProvider.dispose();
		if (onEventItemProvider != null)
			onEventItemProvider.dispose();
		if (importItemProvider != null)
			importItemProvider.dispose();
		if (rethrowItemProvider != null)
			rethrowItemProvider.dispose();
		if (conditionItemProvider != null)
			conditionItemProvider.dispose();
		if (targetsItemProvider != null)
			targetsItemProvider.dispose();
		if (sourcesItemProvider != null)
			sourcesItemProvider.dispose();
		if (queryItemProvider != null)
			queryItemProvider.dispose();
		if (serviceRefItemProvider != null)
			serviceRefItemProvider.dispose();
		if (extensionsItemProvider != null)
			extensionsItemProvider.dispose();
		if (extensionActivityItemProvider != null)
			extensionActivityItemProvider.dispose();
		if (fromPartItemProvider != null)
			fromPartItemProvider.dispose();
		if (toPartItemProvider != null)
			toPartItemProvider.dispose();
		if (opaqueActivityItemProvider != null)
			opaqueActivityItemProvider.dispose();
		if (forEachItemProvider != null)
			forEachItemProvider.dispose();
		if (repeatUntilItemProvider != null)
			repeatUntilItemProvider.dispose();
		if (terminationHandlerItemProvider != null)
			terminationHandlerItemProvider.dispose();
		if (validateItemProvider != null)
			validateItemProvider.dispose();
		if (ifItemProvider != null)
			ifItemProvider.dispose();
		if (elseIfItemProvider != null)
			elseIfItemProvider.dispose();
		if (elseItemProvider != null)
			elseItemProvider.dispose();
		if (completionConditionItemProvider != null)
			completionConditionItemProvider.dispose();
		if (branchesItemProvider != null)
			branchesItemProvider.dispose();
		if (bpelExtensibleElementItemProvider != null)
			bpelExtensibleElementItemProvider.dispose();
		if (documentationItemProvider != null)
			documentationItemProvider.dispose();
		if (compensateItemProvider != null)
			compensateItemProvider.dispose();
		if (fromPartsItemProvider != null)
			fromPartsItemProvider.dispose();
		if (toPartsItemProvider != null)
			toPartsItemProvider.dispose();
	}

}
