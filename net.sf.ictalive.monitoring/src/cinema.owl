rule "classify event template"
when
	EventTemplate(ev : event)
then
	insertLogical(new FactClass(ev, ev.getContent().getFact().getClass()));
end

rule "classify event"
when
	ev : Event()
then
	insertLogical(new FactClass(ev, ev.getContent().getFact().getClass()));
end

rule "match event and event template"
when
	EventTemplate(ev1 : event)
	ev2 : Event()
	FactClass(event == ev1, cl : factClass)
	FactClass(event == ev2, factClass == cl)
then
	System.out.println("Match!!!");
end

rule "event received"
when
	ev : Event()
then
	System.out.println("Event received from asserter: " + ev.getAsserter().getName());
end

rule "cascade"
when
	e : EObject()
then
	Iterator<EObject>	it;
	EObject				eo;
	
	it = e.eCrossReferences().iterator();
	while(it.hasNext())
	{
		eo = it.next();
		if(drools.getWorkingMemory().getFactHandle(eo) == null)
		{
			insertLogical(eo);
		}
	}
	it = e.eContents().iterator();
	while(it.hasNext())
	{
		eo = it.next();
		if(drools.getWorkingMemory().getFactHandle(eo) == null)
		{
			insertLogical(eo);
		}
	}
end

// NORM OPERATION

// Structural definitions
rule "there is a set called Roles"
	when
		not Roles()
	then
		insert(new Roles());
end

rule "the set of all roles is Roles"
	when
		r : Role()
		and
		sr : Roles()
	then
		sr.add(r);
end

// Instantiation
rule "norms are instantiated when the norm activation condition holds"
when
	HoldsActivation(n : normID, s : substitution)
then
	System.out.println("Norm instantiated!");
	insert(new Instantiation(n, s));
end

rule "violated(NS,in)"
when
	n : Norm(nid : normID, normType == 0)
	ni : Instantiation(normID == nid, s : substitution)
	not HoldsMaintenanceInstance(normInstance == ni)
then
	System.out.println("Violation!");
	insert(new Violated(ni));
end

rule "holds(in,NormCondition)"
when
	ins : Instantiation(n : normID, s : substitution)
	HoldsMaintenance(normID == n, s1 : substitution)
	forall(v : Value() from s
		HoldsMaintenance(normID == n, substitution == s1, substitution contains v)
	)
then
	System.out.println("holds(in, NormCondition)");
	insertLogical(new HoldsMaintenanceInstance(ins));
end

rule "Normative State"
	when
		
	then
end

// COUNTS-AS RULES

rule "creation of running contexts"
	when
		ClassificatoryCountsAs(a : c1, b : c2)
		and
		lc : TreeSet()
			from collect(ClassificatoryCountsAs(c1 == a, c2 == b))
	then
		RunningContext	rc;
		
		rc = new RunningContext(lc);
		insertLogical(rc);
end

rule "identify running contexts"
	when
		cca : ClassificatoryCountsAs(c : context)
		and
		rc : RunningContext(countsas contains cca)
	then
		insertLogical(new RunningContextIdentifier(rc, c));
end

rule "cleaning running contexts"
	when
		rc : RunningContext(ca : countsas)
		and
		rc2 : RunningContext(countsas == ca)
	then
		if(rc != rc2)
		{
			retract(rc2);
		}
end

rule "running contexts"
	when
		rc : TreeSet()
			from collect(RunningContext())
	then
		System.out.println(rc);
end

rule "intersection"
	when
		obj : Object()
		and
		Predicate(y1 : class, object == obj)
		and
		Predicate(y2 : class, object == obj)
		and
		Intersection(c1 == y1, c2 == y2, i : intersection)
	then
		Predicate instance;
		instance = (Predicate)(((Class)i).newInstance());
		instance.setObject(obj);
		insertLogical(instance);
end

rule "activate running contexts"
	when
		ContextActive(c : context)
		RunningContextIdentifier(rc : runningContext, context == c)
	then
		insertLogical(new RunningContextActive(rc));
end

rule "classificatory counts-as"
	when
		ca : ClassificatoryCountsAs(y1 : c1, y2 : c2)
		rc : RunningContextActive(runningContext == ca)
		obj : Predicate(class == y1)
	then
		insertLogical(new CountsAs(y1, y2));
end

rule "counts-as"
	when
		c : CountsAs(y1 : c1, y2 : c2)
		obj : Predicate(class == y1)
	then
		Predicate instance;
		instance = (Predicate)(((Class)y2).newInstance());
		instance.setObject(obj.getObject());
		insertLogical(instance);
end

rule "activate running context"
	when
		rc : RunningContext(cal : countsas)
		and
		forall(ca : ClassificatoryCountsAs(a : c1, b : c2) from cal
			CountsAs(c1 == a, c2 == b)
		)
	then
		insertLogical(new RunningContextActive(rc));
end

rule "activate context by its running contexts"
	when
		c : Context()
		and
		forall(RunningContextIdentifier(rc : runningContext, context == c)
			RunningContextActive(runningContext == rc)
		)
	then
		insertLogical(new ContextActive(c));
		System.out.println(c.getContext() + " is active!");
end

rule "are there any means of transport?"
	when
		Transport(obj : object)
	then
		System.out.println("We have a transport: " + obj);
end

rule "is there any operational commander?"
	when
		OperationalCommander(obj : object)
	then
		System.out.println("We have an operational commander: " + obj);
end
<?xml version="1.0"?>
<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:process="http://www.daml.org/services/owl-s/1.1/Process.owl#"
    xmlns:service="http://www.daml.org/services/owl-s/1.1/Service.owl#"
    xmlns:list="http://www.daml.org/services/owl-s/1.1/generic/ObjectList.owl#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:profile="http://www.daml.org/services/owl-s/1.1/Profile.owl#"
    xmlns:swrl="http://www.w3.org/2003/11/swrl#"
    xmlns:grounding="http://www.daml.org/services/owl-s/1.1/Grounding.owl#"
    xmlns:expression="http://www.daml.org/services/owl-s/1.1/generic/Expression.owl#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#">
  <service:Service rdf:ID="Service">
    <service:describedBy>
      <process:AtomicProcess rdf:ID="Process"/>
    </service:describedBy>
    <service:presents>
      <profile:Profile rdf:ID="Profile"/>
    </service:presents>
    <service:supports>
      <grounding:WsdlGrounding rdf:ID="Grounding"/>
    </service:supports>
  </service:Service>
  <profile:Profile rdf:about="#Profile">
    <profile:hasInput>
      <process:Input rdf:ID="LocalTime">
        <rdf:type rdf:resource="http://www.daml.org/services/owl-s/1.1/Process.owl#Output"/>
        <process:parameterType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#LocalTime</process:parameterType>
        <rdfs:label>LocalTime</rdfs:label>
      </process:Input>
    </profile:hasInput>
    <profile:hasInput>
      <process:Output rdf:ID="UserLocation">
        <rdf:type rdf:resource="http://www.daml.org/services/owl-s/1.1/Process.owl#Input"/>
        <process:parameterType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#UserLocation</process:parameterType>
        <rdfs:label>UserLocation</rdfs:label>
      </process:Output>
    </profile:hasInput>
    <profile:hasOutput rdf:resource="#UserLocation"/>
    <profile:hasOutput>
      <process:Output rdf:ID="UserRequirements">
        <rdf:type rdf:resource="http://www.daml.org/services/owl-s/1.1/Process.owl#Input"/>
        <process:parameterType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#UserRequirements</process:parameterType>
        <rdfs:label>UserRequirements</rdfs:label>
      </process:Output>
    </profile:hasOutput>
    <profile:hasOutput>
      <process:Output rdf:ID="UserInterests">
        <rdf:type rdf:resource="http://www.daml.org/services/owl-s/1.1/Process.owl#Input"/>
        <process:parameterType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#UserInterests</process:parameterType>
        <rdfs:label>UserInterests</rdfs:label>
      </process:Output>
    </profile:hasOutput>
    <profile:hasOutput rdf:resource="#LocalTime"/>
    <profile:serviceName>Get Local Time</profile:serviceName>
    <profile:hasInput rdf:resource="#UserInterests"/>
    <profile:hasInput>
      <process:Input rdf:ID="UserId">
        <process:parameterType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#UserId</process:parameterType>
        <rdfs:label>UserId</rdfs:label>
      </process:Input>
    </profile:hasInput>
    <profile:hasOutput>
      <process:Output rdf:ID="MovieQueryResult">
        <process:parameterType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#MovieQueryResult</process:parameterType>
        <rdfs:label>MovieQueryResult</rdfs:label>
      </process:Output>
    </profile:hasOutput>
    <profile:hasInput rdf:resource="#UserRequirements"/>
    <profile:textDescription>Service to obtain local time</profile:textDescription>
    <service:presentedBy rdf:resource="#Service"/>
  </profile:Profile>
  <process:AtomicProcess rdf:about="#Process">
    <process:hasInput rdf:resource="#UserRequirements"/>
    <service:describes rdf:resource="#Service"/>
    <process:hasInput rdf:resource="#UserInterests"/>
    <process:hasOutput rdf:resource="#UserLocation"/>
    <process:hasInput rdf:resource="#LocalTime"/>
    <process:hasOutput rdf:resource="#UserInterests"/>
    <process:hasInput rdf:resource="#UserId"/>
    <process:hasInput rdf:resource="#UserLocation"/>
    <process:hasOutput rdf:resource="#MovieQueryResult"/>
    <process:hasOutput rdf:resource="#UserRequirements"/>
    <process:hasOutput rdf:resource="#LocalTime"/>
  </process:AtomicProcess>
  <grounding:WsdlGrounding rdf:about="#Grounding">
    <grounding:hasAtomicProcessGrounding>
      <grounding:WsdlAtomicProcessGrounding rdf:ID="ProcessGrounding"/>
    </grounding:hasAtomicProcessGrounding>
    <service:supportedBy rdf:resource="#Service"/>
  </grounding:WsdlGrounding>
  <grounding:WsdlAtomicProcessGrounding rdf:about="#ProcessGrounding">
    <grounding:wsdlInput>
      <grounding:WsdlInputMessageMap>
        <grounding:owlsParameter rdf:resource="#UserInterests"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#userinterests</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:ontology="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;xsl:template match="/"&gt; &lt;xsl:value-of select="rdf:RDF/ontology:UserInterests/ontology:UserInterests"/&gt; &lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlInputMessageMap>
    </grounding:wsdlInput>
    <grounding:wsdlInput>
      <grounding:WsdlInputMessageMap>
        <grounding:owlsParameter rdf:resource="#UserRequirements"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#userrequirements</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:ontology="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;xsl:template match="/"&gt; &lt;xsl:value-of select="rdf:RDF/ontology:UserRequirements/ontology:UserRequirements"/&gt; &lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlInputMessageMap>
    </grounding:wsdlInput>
    <grounding:wsdlInput>
      <grounding:WsdlInputMessageMap>
        <grounding:owlsParameter rdf:resource="#UserId"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#userid</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:ontology="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;xsl:template match="/"&gt; &lt;xsl:value-of select="rdf:RDF/ontology:UserId/ontology:UserId"/&gt; &lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlInputMessageMap>
    </grounding:wsdlInput>
    <grounding:wsdlOutput>
      <grounding:WsdlOutputMessageMap>
        <grounding:owlsParameter rdf:resource="#UserInterests"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#userinterests</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;  &lt;xsl:template match="/"&gt;  &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:concepts="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;concepts:UserInterests&gt;  &lt;/concepts:UserInterests&gt;  &lt;/rdf:RDF&gt;  &lt;/xsl:template&gt;  &lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlOutputMessageMap>
    </grounding:wsdlOutput>
    <grounding:owlsProcess rdf:resource="#Process"/>
    <grounding:wsdlInput>
      <grounding:WsdlInputMessageMap>
        <grounding:owlsParameter rdf:resource="#UserId"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#userid</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:ontology="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;xsl:template match="/"&gt; &lt;xsl:value-of select="rdf:RDF/ontology:UserId/ontology:UserId"/&gt; &lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlInputMessageMap>
    </grounding:wsdlInput>
    <grounding:wsdlOutput>
      <grounding:WsdlOutputMessageMap>
        <grounding:owlsParameter rdf:resource="#LocalTime"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#localtime</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;  &lt;xsl:template match="/"&gt;  &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:concepts="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;concepts:LocalTime&gt;  &lt;/concepts:LocalTime&gt;  &lt;/rdf:RDF&gt;  &lt;/xsl:template&gt;  &lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlOutputMessageMap>
    </grounding:wsdlOutput>
    <grounding:wsdlOutput>
      <grounding:WsdlOutputMessageMap>
        <grounding:owlsParameter rdf:resource="#MovieQueryResult"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#moviequeryresult</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;  &lt;xsl:template match="/"&gt;  &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:concepts="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;concepts:MovieQueryResult&gt;  &lt;/concepts:MovieQueryResult&gt;  &lt;/rdf:RDF&gt;  &lt;/xsl:template&gt;  &lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlOutputMessageMap>
    </grounding:wsdlOutput>
    <grounding:wsdlOutputMessage rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getTimeSoapOut</grounding:wsdlOutputMessage>
    <grounding:wsdlInputMessage rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getTimeSoapIn</grounding:wsdlInputMessage>
    <grounding:wsdlOutput>
      <grounding:WsdlOutputMessageMap>
        <grounding:owlsParameter rdf:resource="#UserLocation"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#userlocation</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;  &lt;xsl:template match="/"&gt;  &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:concepts="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;concepts:UserLocation&gt;  &lt;/concepts:UserLocation&gt;  &lt;/rdf:RDF&gt;  &lt;/xsl:template&gt;  &lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlOutputMessageMap>
    </grounding:wsdlOutput>
    <grounding:wsdlOperation>
      <grounding:WsdlOperationRef>
        <grounding:operation rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getTime</grounding:operation>
        <grounding:portType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getTimeSoap</grounding:portType>
      </grounding:WsdlOperationRef>
    </grounding:wsdlOperation>
    <grounding:wsdlDocument rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl</grounding:wsdlDocument>
    <grounding:wsdlInput>
      <grounding:WsdlInputMessageMap>
        <grounding:owlsParameter rdf:resource="#LocalTime"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#localtime</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:ontology="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;xsl:template match="/"&gt; &lt;xsl:value-of select="rdf:RDF/ontology:LocalTime/ontology:LocalTime"/&gt; &lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlInputMessageMap>
    </grounding:wsdlInput>
    <grounding:wsdlInput>
      <grounding:WsdlInputMessageMap>
        <grounding:owlsParameter rdf:resource="#UserId"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#userid</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:ontology="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;xsl:template match="/"&gt; &lt;xsl:value-of select="rdf:RDF/ontology:UserId/ontology:UserId"/&gt; &lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlInputMessageMap>
    </grounding:wsdlInput>
    <grounding:wsdlOutput>
      <grounding:WsdlOutputMessageMap>
        <grounding:owlsParameter rdf:resource="#UserRequirements"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#userrequirements</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;  &lt;xsl:template match="/"&gt;  &lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:concepts="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;concepts:UserRequirements&gt;  &lt;/concepts:UserRequirements&gt;  &lt;/rdf:RDF&gt;  &lt;/xsl:template&gt;  &lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlOutputMessageMap>
    </grounding:wsdlOutput>
    <grounding:wsdlInput>
      <grounding:WsdlInputMessageMap>
        <grounding:owlsParameter rdf:resource="#UserLocation"/>
        <grounding:wsdlMessagePart rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
        >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#userlocation</grounding:wsdlMessagePart>
        <grounding:xsltTransformationString>&lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:ontology="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#"&gt;  &lt;xsl:template match="/"&gt; &lt;xsl:value-of select="rdf:RDF/ontology:UserLocation/ontology:UserLocation"/&gt; &lt;/xsl:template&gt;&lt;/xsl:stylesheet&gt;</grounding:xsltTransformationString>
      </grounding:WsdlInputMessageMap>
    </grounding:wsdlInput>
  </grounding:WsdlAtomicProcessGrounding>
  <grounding:WsdlOperationRef>
    <grounding:operation rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getUserLocation</grounding:operation>
    <grounding:portType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getUserLocationSoap</grounding:portType>
  </grounding:WsdlOperationRef>
  <owl:Class rdf:about="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#LocalTime"/>
  <owl:Ontology rdf:about="http://alis.cs.bath.ac.uk/services/tmt/cinema.owl">
    <owl:imports rdf:resource="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl"/>
  </owl:Ontology>
  <owl:Class rdf:about="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#UserRequirements"/>
  <grounding:WsdlOperationRef>
    <grounding:operation rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getUserInterests</grounding:operation>
    <grounding:portType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getUserInterestsSoap</grounding:portType>
  </grounding:WsdlOperationRef>
  <grounding:WsdlOperationRef>
    <grounding:operation rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getUserRequirements</grounding:operation>
    <grounding:portType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getUserRequirementsSoap</grounding:portType>
  </grounding:WsdlOperationRef>
  <grounding:WsdlOperationRef>
    <grounding:operation rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getMovieSuggestion</grounding:operation>
    <grounding:portType rdf:datatype="http://www.w3.org/2001/XMLSchema#anyURI"
    >http://localhost:8080/TestWebApplication/TMTDemoTestService?wsdl#getMovieSuggestionSoap</grounding:portType>
  </grounding:WsdlOperationRef>
  <owl:Class rdf:about="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#UserId"/>
  <owl:Class rdf:about="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#UserInterests"/>
  <owl:Class rdf:about="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#UserLocation"/>
  <owl:Class rdf:about="http://alis.cs.bath.ac.uk/ontologies/TMTMovies/0.1/movies.owl#MovieQueryResult"/>
</rdf:RDF>
