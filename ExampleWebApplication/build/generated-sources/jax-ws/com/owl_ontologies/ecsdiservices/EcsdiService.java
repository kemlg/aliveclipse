
package com.owl_ontologies.ecsdiservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.5-b04 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "EcsdiService", targetNamespace = "http://www.owl-ontologies.com/ECSDIServices", wsdlLocation = "file:/Users/sergio/Documents/Research/ecsdi/aliveclipse/ExampleWebApplication/src/conf/xml-resources/web-services/NewWebServiceFromWSDL/wsdl/ECSDIServices.wsdl")
public class EcsdiService
    extends Service
{

    private final static URL ECSDISERVICE_WSDL_LOCATION;
    private final static WebServiceException ECSDISERVICE_EXCEPTION;
    private final static QName ECSDISERVICE_QNAME = new QName("http://www.owl-ontologies.com/ECSDIServices", "EcsdiService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/sergio/Documents/Research/ecsdi/aliveclipse/ExampleWebApplication/src/conf/xml-resources/web-services/NewWebServiceFromWSDL/wsdl/ECSDIServices.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        ECSDISERVICE_WSDL_LOCATION = url;
        ECSDISERVICE_EXCEPTION = e;
    }

    public EcsdiService() {
        super(__getWsdlLocation(), ECSDISERVICE_QNAME);
    }

    public EcsdiService(WebServiceFeature... features) {
        super(__getWsdlLocation(), ECSDISERVICE_QNAME, features);
    }

    public EcsdiService(URL wsdlLocation) {
        super(wsdlLocation, ECSDISERVICE_QNAME);
    }

    public EcsdiService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, ECSDISERVICE_QNAME, features);
    }

    public EcsdiService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EcsdiService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns EcsdiSoap
     */
    @WebEndpoint(name = "EcsdiSoap")
    public EcsdiSoap getEcsdiSoap() {
        return super.getPort(new QName("http://www.owl-ontologies.com/ECSDIServices", "EcsdiSoap"), EcsdiSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EcsdiSoap
     */
    @WebEndpoint(name = "EcsdiSoap")
    public EcsdiSoap getEcsdiSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.owl-ontologies.com/ECSDIServices", "EcsdiSoap"), EcsdiSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (ECSDISERVICE_EXCEPTION!= null) {
            throw ECSDISERVICE_EXCEPTION;
        }
        return ECSDISERVICE_WSDL_LOCATION;
    }

}
